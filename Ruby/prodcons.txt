Colby Morrison

This was another great assignment. I think the tuple space model is especially elegant and have enjoyed working with it. Ruby was a new language for me, so most of my issues were in picking up the syntax. The examples were very helpful in that regard and I was able to find all other answers I needed online. It was fairly straightforward to translate the psudeocode into Rinda code. Most of my runtime bugs came from putting a "ts.take" where I should have had a "ts.read" or vice-versa. Adding print statements to see where the procedures were blocking was helpful for debugging.
My version 2 seems to work with multiple producers and multiple consumers, though I'm pretty sure its not fair. I also wrote a reset script to easily reset tuple space, I attatched that as well.
 Using tagging to implement semaphores and arrays was really fun. Its cool how so many data structures and concepts can be expressed in the very simple tuple space model, using the blocking rules and proper tagging of the tuples. The ability to implement truly distribued and decoupled programs like this is fascinating. As with the CSP model, I would have never considered something like this, it again added a new dimension to my programming knowledge.  I hope I have the opportunity to use the tuple space model much more in my future.  

