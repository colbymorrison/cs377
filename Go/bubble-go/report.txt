This was another fun assignment. This was my first time programming in Go, so most of my issues werein figuring out the syntax and style of the language. The Go documentation was helpful and I was able to get everything sorted out. Go is a language I'd always wanted to play with, so I'm really glad this class forced me to explore it. I hope to do more Go programming in the future, I really like the language!
     I also really enjoy this CSP style of concurrency, it feels much cleaner than monitors or the other lock-based concurrency paradigms we've discussed. It also feels like a radically different way of thinking about pogramming, where you create this network of communicating goroutines or processes. I'd never have thought you could program like that before, or thought about using processes in such a lighteweight way. This CSP chapter was really mind-opening for me; I guess I'd been indocrinated by the cult of the sequential.   
    In my implementation, you can provide a command line argument to specify the length of the list to sort (and correspondingly the range of random numbers generated). If no argument is provided, it will default to a 1000 element list. 
    It was really fun to watch the real-time CPU usage as a ran the program. On my 4-core machine, CPU usage would immedatley jump to 400% for the duration of the run time. It was so cool to be able to exploit the CPU's resources to their absolute fullest. The lack of memory usage is an extra bonus.  

